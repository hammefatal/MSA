plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.2'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'com.bmuschko.docker-spring-boot-application' version '9.4.0'
}

group = 'home.hammefatal.msa'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    implementation 'org.springframework.kafka:spring-kafka'

    implementation project(path: ':Common')
}

tasks.named('test') {
    useJUnitPlatform()
}

tasks.register("prepareKotlinBuildScriptModel"){}

bootJar {
    archiveFileName = rootProject.name.toLowerCase() + "-" + project.name.toLowerCase() + "-" + project.version + ".jar"
}

bootBuildImage {
    imageName = rootProject.name.toLowerCase() + "-" + project.name.toLowerCase() + ":" + project.version
    createdDate = "now"
}

docker {
    springBootApplication {
        baseImage = 'amazoncorretto:21-alpine'               // Base Docker image
        ports = [8080]                                  // Exposed ports
        images = ["msa-kafka-service:${project.version}"] // Image tags
        jvmArgs = ['-Dspring.profiles.active=production'] // JVM arguments
    }
}