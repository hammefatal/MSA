#version: '3'

services:
  ############################ Kafka Service for logging ############################
  zookeeper:
    image: 'bitnami/zookeeper:3.9.2'
    container_name: zookeeper
    ports:
      - '2181:2181'
    environment:
      ALLOW_ANONYMOUS_LOGIN: yes
      ZOO_TLS_CLIENT_AUTH: none
      ZOO_TLS_QUORUM_CLIENT_AUTH: none
    networks:
      - msa_network

  kafka:
    image: 'bitnami/kafka:3.7.0'
    container_name: kafka
    ports:
      - '9092:9092'
    networks:
      - msa_network
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      ALLOW_PLAINTEXT_LISTENER: yes
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092, EXTERNAL://localhost:9094
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092, EXTERNAL://0.0.0.0:9094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT, EXTERNAL:PLAINTEXT
    depends_on:
      - zookeeper

  kafka-ui:
    image: provectuslabs/kafka-ui:v0.7.2
    container_name: kafka-ui
    networks:
      - msa_network
    ports:
      - "8989:8080"
    restart: always
    depends_on:
      - kafka
      - zookeeper
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092

  kafka-service:
    image: msa-kafka-service:0.0.1-SNAPSHOT
    restart: always
    depends_on:
      - kafka
      - zookeeper
    environment:
      KAFKA_CLUSTERS_BOOTSTRAPSERVERS: kafka:9092
      LOGGING_TOPIC: msa.logging.out.stdout
      TASK_TOPIC: msa.task
      TASK_RESULT_TOPIC: msa.task.result
    networks:
      - msa_network

  ############################ User Service ############################
  mysql-user:
    image: mysql:latest
    container_name: mysql_user
    networks:
      - msa_network
    volumes:
      - ./User-service/db/conf.d:/etc/mysql/conf.d
      - ./User-service/db/data:/var/lib/mysql
      - ./User-service/db/initdb.d:/docker-entrypoint-initdb.d
    ports:
      - "33061:3306"
    environment:
      TZ: Asia/Seoul
      MYSQL_ROOT_PASSWORD: user_root
      MYSQL_DATABASE: user_db
      MYSQL_USER: user_id
      MYSQL_PASSWORD: user_pw
  User-service:
    image: msa-user-service:0.0.1-SNAPSHOT
    ports:
      - "8081:8080"
    depends_on:
      - mysql-user
      - kafka-service
    networks:
      - msa_network
    environment:
      SPRINGDOC_API-DOCS_PATH: /users/api-docs
      SPRINGDOC_SWAGGER-UI_PATH: /users/swagger-ui
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql-user:3306/user_db?useSSL=false&allowPublicKeyRetrieval=true
      SPRING_DATASOURCE_USERNAME: user_id
      SPRING_DATASOURCE_PASSWORD: user_pw
      SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT: org.hibernate.dialect.MySQL8Dialect
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      KAFKA_CLUSTERS_BOOTSTRAPSERVERS: kafka:9092
      LOGGING_TOPIC: msa.logging.out.stdout
      TASK_TOPIC: msa.task
      TASK_RESULT_TOPIC: msa.task.result


networks:
  msa_network:
    driver: bridge